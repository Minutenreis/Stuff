$date
	Tue Nov 15 15:25:10 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mux_4_tb $end
$var wire 64 ! l_out [63:0] $end
$var reg 64 " l_in0 [63:0] $end
$var reg 64 # l_in1 [63:0] $end
$var reg 64 $ l_in2 [63:0] $end
$var reg 64 % l_in3 [63:0] $end
$var reg 2 & l_s [1:0] $end
$scope module m_dut $end
$var wire 64 ' i_in0 [63:0] $end
$var wire 64 ( i_in1 [63:0] $end
$var wire 64 ) i_in2 [63:0] $end
$var wire 64 * i_in3 [63:0] $end
$var wire 2 + i_s [1:0] $end
$var wire 64 , o_out [63:0] $end
$var wire 64 - l_out1 [63:0] $end
$var wire 64 . l_out0 [63:0] $end
$scope module mux_2_0 $end
$var wire 64 / i_in0 [63:0] $end
$var wire 64 0 i_in1 [63:0] $end
$var wire 1 1 i_s $end
$var reg 64 2 o_out [63:0] $end
$upscope $end
$scope module mux_2_1 $end
$var wire 64 3 i_in0 [63:0] $end
$var wire 64 4 i_in1 [63:0] $end
$var wire 1 5 i_s $end
$var reg 64 6 o_out [63:0] $end
$upscope $end
$scope module mux_2_2 $end
$var wire 64 7 i_in0 [63:0] $end
$var wire 64 8 i_in1 [63:0] $end
$var wire 1 9 i_s $end
$var reg 64 : o_out [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 :
09
b11 8
b1 7
b11 6
05
b100 4
b11 3
b1 2
01
b10 0
b1 /
b1 .
b11 -
b1 ,
b0 +
b100 *
b11 )
b10 (
b1 '
b0 &
b100 %
b11 $
b10 #
b1 "
b1 !
$end
#10
b10 !
b10 ,
b10 :
b10 .
b10 2
b10 7
b100 -
b100 6
b100 8
11
15
b1 &
b1 +
#20
b1 .
b1 2
b1 7
b11 -
b11 6
b11 8
b11 !
b11 ,
b11 :
01
05
19
b10 &
b10 +
#30
b100 !
b100 ,
b100 :
b10 .
b10 2
b10 7
b100 -
b100 6
b100 8
11
15
b11 &
b11 +
#40
